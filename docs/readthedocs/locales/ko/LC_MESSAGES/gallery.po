# SOME DESCRIPTIVE TITLE.
# Copyright (C) Copyright (c) 2011-2023, The DART development contributors
# This file is distributed under the same license as the DART: Dynamic
# Animation and Robotics Toolkit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: DART: Dynamic Animation and Robotics Toolkit "
"7.0.0-alpha0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-02-23 06:06-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: ko\n"
"Language-Team: ko <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"

#: ../../gallery.rst:2 3241c01f44164dd3acd86ab2cc125972
msgid "Gallery"
msgstr ""

#: ../../gallery.rst:5 ddb24f2b72ba46e4a4838d2cf4141670
msgid "Built-in Examples"
msgstr ""

#: ../../gallery.rst:8 f48c997c27bb479d8482160d3a5b1300
msgid "Atlas Simbicon"
msgstr ""

#: ../../gallery.rst:10 0032f2c5483141aa9eba993dbfa0db9e
msgid ""
"The *Atlas Simbicon* demo simulates `Atlas "
"<http://www.bostondynamics.com/robot_Atlas.html>`_ humanoid robot "
"controlled by `Simbicon "
"<http://www.cs.ubc.ca/~van/papers/Simbicon.htm>`_, which is a simple "
"biped locomotion controller. This demo is a fully 3D simulation with "
"articulated dynamics and rigid body collisions. This demo uses "
"OpenSceneGraph for 3D rendering and ImGui for 2D on-screen buttons. The "
"source code can be found in the `examples/osg/osgAtlasSimbicon "
"<https://github.com/dartsim/dart/tree/b680dfa4dad11eeee4a7d5d1e0d621c9861a70d0/examples/atlas_simbicon>`_"
" directory."
msgstr ""

#: ../../gallery.rst:18 df61e363fc364b38be8908808f2d64a8
msgid ""
"The controller has three control modes: 'No Control', 'Short-Stride "
"Walking', and 'Normal-Stride Walking'. The Atlas robot can walk keeping "
"its balance with disturbances. You can apply external forces to the torso"
" using the keyboard:"
msgstr ""

#: ../../gallery.rst:22 b8add8ba9d4d481089621d5c45be952a
msgid "'A' Key: push forward the torso of Atlas"
msgstr ""

#: ../../gallery.rst:23 0c20a4e58f424f2d8b90a76252a285ac
msgid "'S' Key: push backward the torso of Atlas"
msgstr ""

#: ../../gallery.rst:24 f5d900063ea0435287abb5097baba8c8
msgid "'D' Key: push left the torso of Atlas"
msgstr ""

#: ../../gallery.rst:25 fbbb94ad699344feb9670e43fec54108
msgid "'F' Key: push right the torso of Atlas"
msgstr ""

#: ../../gallery.rst:27 f1bca535812f44428b20fa3d523a7abd
msgid ""
"\"Reset Atlas\" button is for recovering the robot to the initial "
"location and initial pose, which is useful when it's fallen or bungee-"
"jumped out of the ground."
msgstr ""

#: ../../gallery.rst:30 5fad1bac9116468b870896885f932dc8
msgid "Gravity can be varied using the slider at the 2D GUI."
msgstr ""

#: ../../gallery.rst:39 85c4ac9887064bf180ac4c108f482bd6
msgid "Tinkertoy"
msgstr ""

#: ../../gallery.rst:41 602a8be8120d494bafa79151981b8f1a
msgid ""
"The *tinkertoy* demo simulates trees of *tinkertoys*, which are blocks "
"connected to each other via various joint types. This is a fully 3D "
"simulation with articulated dynamics and rigid body collisions. This demo"
" uses OpenSceneGraph for 3D rendering and ImGui for 2D on-screen buttons."
" The source code can be found in the `examples/osg/osgTinkertoy "
"<https://github.com/dartsim/dart/tree/b680dfa4dad11eeee4a7d5d1e0d621c9861a70d0/examples/tinkertoy>`_"
" directory."
msgstr ""

#: ../../gallery.rst:48 00695f148ea74acb96933246379d65f3
msgid ""
"The scene starts out with two trees of *tinkertoys*. Left-click on one of"
" the blocks to attach a target to it. During simulation, the block that "
"is attached to the target will be pulled towards the target with a "
"spring-like force. Move the target around by clicking on its handles to "
"change the direction of the force."
msgstr ""

#: ../../gallery.rst:54 95ef5b0d7591490ea00c2e2525d77341
msgid ""
"When simulation is paused, the user can change the structure of the "
"tinkertoy by adding and removing blocks. Click on:"
msgstr ""

#: ../../gallery.rst:57 bc1a0f0fb69f435b884fc15ce8ac8e32
msgid "Add a Weld-Joint Block"
msgstr ""

#: ../../gallery.rst:58 750e4fa68b7d40c893e198077c92a23b
msgid "Add a Revolute-Joint Block"
msgstr ""

#: ../../gallery.rst:59 2a674b27756f4ddf8a56f07d90e2a2ed
msgid "Add a Ball-Joint Block"
msgstr ""

#: ../../gallery.rst:61 93b884fd5f24402a84fe3a0f410dc88c
msgid ""
"to add a block with the specified joint type at the current target "
"location. The new block will be attached to whichever block the target is"
" currently attached to. You can use the Reset Target button to detach the"
" target from all blocks, allowing you to construct a new tinkertoy tree. "
"The new block will run along the x-axis (red arrow) of the target. For "
"revolute joints, the joint axis will align with the target's z-axis (blue"
" arrow)."
msgstr ""

#: ../../gallery.rst:68 4d22a876f3bd4f56b24a0124b11be0ae
msgid "Gravity can be toggled from the 2D GUI or by pressing the `G` key."
msgstr ""

#: ../../gallery.rst:77 3ff061e2115c49fc951f2cc5c340c3b1
msgid "Examples on `Gazebo <http://www.gazebosim.org/>`_"
msgstr ""

#: ../../gallery.rst:79 7fc92f4f31d242d789a7ac8f59fcf9ea
msgid ""
"The non-profit organization, `OSRF (Open Source Robotic Foundation) "
"<http://www.osrfoundation.org/>`_, conducted a `performance comparison "
"<https://vimeo.com/105584932>`_ (first video) on four physics engines: "
"`ODE <http://www.ode.org/>`_, `Bullet <http://bulletphysics.org/>`_, "
"`DART <http://dartsim.github.io/>`_, and `SimBody "
"<https://simtk.org/projects/simbody>`_ (`ROSCon 2014 "
"<http://www.osrfoundation.org/wordpress2/wp-"
"content/uploads/2015/04/roscon2014_scpeters.pdf>`_). An `Atlas robot "
"<http://www.bostondynamics.com/robot_Atlas.html>`_ was simulated using "
"each of the physics engines to determine the highest RTF that results in "
"stable walking motion. RTF (real-time factor) is a metric to measure the "
"speed of the physics engine. RTF < 1 means slower than real time and RTF "
"> 1 means faster than real time. DART achieved 1.6-1.9 RTF, faster than "
"ODE (1.45), Bullet (0.15), and SimBody (0.1). The second `video "
"<https://vimeo.com/84443645>`_ shows that, despite the differences in "
"performance, the motion trajectories simulated by different physics "
"engines are qualitatively similar."
msgstr ""

